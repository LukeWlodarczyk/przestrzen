---
import type { PropsWithChildren } from "@utils/types";

import HR from "@components/typography/HR.astro";

import StickyAside from "./StickyAside.astro";
import type { AsideDirectives } from "./stickyAside";

import BREAKPOINTS from "@styles/breakpoints/breakpoints";

const hasRequiredSlots = (slots: string[]) =>
  slots.every((slot) => Astro.slots.has(slot));

if (!hasRequiredSlots(["header", "body", "aside"])) {
  throw new Error(
    'This component requires slots: <slot name="header" />, <slot name="body" />, and <slot name="aside" /> to be provided.',
  );
}

type Props = PropsWithChildren<{
  asideClientDirective?: AsideDirectives;
}>;

const { asideClientDirective = "client:media" } = Astro.props;
---

<article>
  <header class="w-full">
    <slot name="header" />
  </header>

  <HR className="my-(--space-xl-2xl)" />

  <div class="flex flex-col xl:flex-row xl:gap-(--space-xl-2xl)">
    <div class="mx-auto w-full max-w-prose xl:w-2/3">
      <slot name="body" />
    </div>

    <HR className="my-(--space-xl-2xl) xl:hidden" />

    <StickyAside
      className="w-full xl:w-1/3"
      clientDirective={asideClientDirective}
      mediaQueryBreakpoint={BREAKPOINTS.xl}
    >
      <slot name="aside" />
    </StickyAside>
  </div>
</article>
